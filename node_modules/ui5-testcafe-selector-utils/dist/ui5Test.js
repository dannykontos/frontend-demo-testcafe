"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ui5Test = exports.ui5Fixture = void 0;
var testcafe_1 = require("testcafe");
var _1 = require(".");
var ui5Action_1 = require("./ui5Action");
var ui5Config_1 = require("./ui5Config");
var ui5Coverage_1 = require("./ui5Coverage");
var colors = require('colors/safe');
try {
    require('dotenv').config();
}
catch (err) { }
function ui5Fixture(name, url, category) {
    var _this = this;
    var urlUse = url;
    if (ui5Config_1.ui5Config.coverage.enabled) {
        urlUse = _1.ui5Proxy.startCoverageProxy(url, ui5Config_1.ui5Config.coverage);
    }
    return fixture(name)
        .meta('PRODUCT', category ? category : "")
        .meta('URL', url)
        .before(function (t) { return __awaiter(_this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!ui5Config_1.ui5Config.coverage.enabled) return [3 /*break*/, 2];
                    return [4 /*yield*/, _1.ui5Proxy.getStartPromise()];
                case 1:
                    _a.sent();
                    _a.label = 2;
                case 2: return [2 /*return*/];
            }
        });
    }); })
        .after(function (t) { return __awaiter(_this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!ui5Config_1.ui5Config.coverage.enabled) return [3 /*break*/, 2];
                    return [4 /*yield*/, _1.ui5Proxy.logMissingComponents()];
                case 1:
                    _a.sent();
                    _a.label = 2;
                case 2: return [2 /*return*/];
            }
        });
    }); })
        .page(urlUse);
}
exports.ui5Fixture = ui5Fixture;
function ui5Test(description, testCase, func) {
    var _this = this;
    var fnCall = func ? func : testCase;
    var testCase = func ? testCase : description;
    if (!testCase) {
        testCase = description;
    }
    return test.clientScripts({ path: __dirname + "/clientScripts/client.js" }).after(function (t) { return __awaiter(_this, void 0, void 0, function () {
        var error, coverage, sTime, fnGetLog, log, consLength, i;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, t.getBrowserConsoleMessages()];
                case 1:
                    error = (_a.sent()).error;
                    return [4 /*yield*/, testcafe_1.ClientFunction(function () { return window["__coverage__"]; })()];
                case 2:
                    coverage = _a.sent();
                    if (coverage) {
                        ui5Coverage_1.ui5Coverage.mergeConverage(coverage);
                    }
                    ui5Action_1.ui5Steps.setConsoleErrorLogs(t, error);
                    sTime = Math.round(((process.uptime()) + Number.EPSILON) * 100) / 100;
                    console.log(colors.bold(testCase + " : '" + description + "' stopped after " + sTime + "s"));
                    if (!ui5Config_1.ui5Config.coverage.enabled) return [3 /*break*/, 4];
                    return [4 /*yield*/, _1.ui5Proxy.checkLoggedComponents(t)];
                case 3:
                    _a.sent();
                    _a.label = 4;
                case 4:
                    if (!ui5Config_1.ui5Config.traceSelectorOnFailure) return [3 /*break*/, 6];
                    if (!ui5Action_1.ui5Steps.hasFailedSteps(ui5Action_1.ui5Steps.getCurrentTestName(t))) return [3 /*break*/, 6];
                    fnGetLog = testcafe_1.ClientFunction(function (traceOptions) {
                        //@ts-ignore
                        return window.ui5TestCafeSelector.getSelectorLog(traceOptions);
                    }, { boundTestRun: t });
                    return [4 /*yield*/, fnGetLog()];
                case 5:
                    log = _a.sent();
                    consLength = {};
                    for (i = 0; i < log.found.length; i++) {
                        consLength[log.found[i].id] = true;
                    }
                    console.log(colors.bold("Found items:" + Object.keys(consLength).length));
                    if (log.found.length > 0) {
                        console.table(log.found, ["id", "target", "property", "expected", "actual"]);
                    }
                    console.log(colors.bold("Not-Found items:" + Object.keys(log.notFound).length));
                    console.table(log.notFound, ["target", "property", "expected", "actual"]);
                    _a.label = 6;
                case 6: return [2 /*return*/];
            }
        });
    }); }).meta('TEST_CASE', testCase)(description, function (t) { return __awaiter(_this, void 0, void 0, function () {
        var ui5ActionsDefForRun, sTime;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    t.ctx.name = description;
                    t.ctx.testCase = testCase;
                    ui5Action_1.ui5ActionDef.currentTestRun = t;
                    ui5ActionsDefForRun = new ui5Action_1.ui5ActionDef(t);
                    sTime = Math.round(((process.uptime()) + Number.EPSILON) * 100) / 100;
                    console.log(colors.bold(testCase + " : '" + description + "' started after " + sTime + "s"));
                    return [4 /*yield*/, fnCall(ui5ActionsDefForRun, t)];
                case 1:
                    _a.sent();
                    return [2 /*return*/];
            }
        });
    }); });
}
exports.ui5Test = ui5Test;
//# sourceMappingURL=ui5Test.js.map