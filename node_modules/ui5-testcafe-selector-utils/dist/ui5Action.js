"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ui5StepStatus = exports.ui5StepType = exports.ui5Steps = exports.ui5ActionDef = exports.ui5ActionStep = exports.ui5Action = exports.ui5SupportAssistantIssueSeverity = exports.ui5TraceMismatchType = void 0;
var colors = require('colors/safe');
var testcafe_1 = require("testcafe");
var _1 = require(".");
var ui5Asserts_1 = require("./ui5Asserts");
var ui5Builder_1 = require("./ui5Builder");
var rqTrack = require("testcafe/lib/api/test-run-tracker");
var ui5StepType;
(function (ui5StepType) {
    ui5StepType[ui5StepType["UNDEFINED"] = 0] = "UNDEFINED";
    ui5StepType[ui5StepType["CLICK"] = 1] = "CLICK";
    ui5StepType[ui5StepType["TYPE_TEXT"] = 2] = "TYPE_TEXT";
    ui5StepType[ui5StepType["ASSERT_VISIBLE"] = 3] = "ASSERT_VISIBLE";
    ui5StepType[ui5StepType["ASSERT_PROPERTY_VALUE"] = 4] = "ASSERT_PROPERTY_VALUE";
    ui5StepType[ui5StepType["PRESS_KEY"] = 4] = "PRESS_KEY";
    ui5StepType[ui5StepType["BLUR"] = 5] = "BLUR";
    ui5StepType[ui5StepType["CLEAR_TEXT"] = 6] = "CLEAR_TEXT";
    ui5StepType[ui5StepType["ASSERT_EXISTS"] = 7] = "ASSERT_EXISTS";
    ui5StepType[ui5StepType["RIGHT_CLICK"] = 8] = "RIGHT_CLICK";
    ui5StepType[ui5StepType["DOUBLE_CLICK"] = 9] = "DOUBLE_CLICK";
    ui5StepType[ui5StepType["HOVER"] = 10] = "HOVER";
    ui5StepType[ui5StepType["DRAG"] = 11] = "DRAG";
    ui5StepType[ui5StepType["DRAG_TO_ELEMENT"] = 12] = "DRAG_TO_ELEMENT";
    ui5StepType[ui5StepType["SELECT_TEXT"] = 13] = "SELECT_TEXT";
    ui5StepType[ui5StepType["SELECT_TEXT_AREA_CONTENT"] = 14] = "SELECT_TEXT_AREA_CONTENT";
    ui5StepType[ui5StepType["SELECT_EDITABLE_CONTENT"] = 15] = "SELECT_EDITABLE_CONTENT";
    ui5StepType[ui5StepType["WAIT"] = 16] = "WAIT";
    ui5StepType[ui5StepType["NAVIGATE_TO"] = 17] = "NAVIGATE_TO";
    ui5StepType[ui5StepType["SET_FILES_TO_UPLOAD"] = 18] = "SET_FILES_TO_UPLOAD";
    ui5StepType[ui5StepType["UPLOAD"] = 19] = "UPLOAD";
    ui5StepType[ui5StepType["CLEAR_UPLOAD"] = 20] = "CLEAR_UPLOAD";
    ui5StepType[ui5StepType["TAKE_SCREENSHOT"] = 21] = "TAKE_SCREENSHOT";
    ui5StepType[ui5StepType["TAKE_ELEMENT_SCREENSHOT"] = 22] = "TAKE_ELEMENT_SCREENSHOT";
    ui5StepType[ui5StepType["RESIZE_WINDOW"] = 24] = "RESIZE_WINDOW";
    ui5StepType[ui5StepType["MAXIMIZE_WINDOW"] = 25] = "MAXIMIZE_WINDOW";
    ui5StepType[ui5StepType["SWITCH_TO_IFRAME"] = 26] = "SWITCH_TO_IFRAME";
    ui5StepType[ui5StepType["SET_NATIVE_DIALOG_HANDLER"] = 27] = "SET_NATIVE_DIALOG_HANDLER";
    ui5StepType[ui5StepType["OPEN_WINDOW"] = 28] = "OPEN_WINDOW";
})(ui5StepType || (ui5StepType = {}));
exports.ui5StepType = ui5StepType;
;
var ui5StepStatus;
(function (ui5StepStatus) {
    ui5StepStatus[ui5StepStatus["UNDEFINED"] = 0] = "UNDEFINED";
    ui5StepStatus[ui5StepStatus["QUEUED"] = 1] = "QUEUED";
    ui5StepStatus[ui5StepStatus["PROCESSED"] = 2] = "PROCESSED";
    ui5StepStatus[ui5StepStatus["FAILED"] = 3] = "FAILED";
    ui5StepStatus[ui5StepStatus["FAILED_UNPROCESSED"] = 4] = "FAILED_UNPROCESSED";
})(ui5StepStatus || (ui5StepStatus = {}));
exports.ui5StepStatus = ui5StepStatus;
;
var ui5ActionStep = /** @class */ (function () {
    function ui5ActionStep(stepId, stepType, status, selector, startTime, testName, isUI5Selector, isTracedSelector, testCtrl, activity) {
        this.stepId = 0;
        this.stepType = ui5StepType.UNDEFINED;
        this.status = ui5StepStatus.UNDEFINED;
        this.testName = "";
        this.selector = "";
        this.activity = "";
        this.startTime = 0;
        this.endTime = 0;
        this.isUI5Selector = false;
        this.isFirstUI5Selector = false;
        this.isTracedSelector = false;
        this.stepId = stepId;
        this.t = testCtrl;
        this.stepType = stepType;
        this.status = status;
        this.selector = selector;
        this.startTime = startTime;
        this.testName = testName;
        this.activity = activity ? activity : "";
        this.isUI5Selector = isUI5Selector;
        this.isTracedSelector = isTracedSelector;
        this.isFirstUI5Selector = false;
    }
    return ui5ActionStep;
}());
exports.ui5ActionStep = ui5ActionStep;
var ui5StepsDef = /** @class */ (function () {
    function ui5StepsDef() {
        this._steps = {};
        this._startTime = 0;
        this._errorLogs = {};
    }
    ui5StepsDef.prototype.getCurrentTestName = function (t) {
        t = t ? t : ui5ActionDef.currentTestRun;
        if (t.ctx && t.ctx.testCase) {
            return t.ctx.testCase;
        }
        else if (t.ctx && t.ctx.name) {
            return t.ctx.name;
        }
        return "";
    };
    ui5StepsDef.prototype.setConsoleErrorLogs = function (t, errorLog) {
        this._errorLogs[this.getCurrentTestName(t)] = errorLog;
    };
    ui5StepsDef.prototype.getConsoleErrorLog = function (testCase) {
        if (this._errorLogs[testCase]) {
            return this._errorLogs[testCase];
        }
        return [];
    };
    ui5StepsDef.prototype.getStatusDescr = function (status) {
        switch (status) {
            case ui5StepStatus.FAILED:
                return "Failed";
            case ui5StepStatus.FAILED_UNPROCESSED:
                return "Failed (previous errors)";
            case ui5StepStatus.PROCESSED:
                return "Processed";
            case ui5StepStatus.QUEUED:
                return "Queued";
            default:
                return "";
        }
    };
    ui5StepsDef.prototype.getStepDescr = function (step) {
        switch (step) {
            case ui5StepType.CLICK:
                return "Click";
            case ui5StepType.TYPE_TEXT:
                return "Type-Text";
            case ui5StepType.BLUR:
                return "Blurs";
            case ui5StepType.ASSERT_VISIBLE:
                return "Asserts Visiblity";
            case ui5StepType.ASSERT_PROPERTY_VALUE:
                return "Asserts Property";
            case ui5StepType.PRESS_KEY:
                return "Press Key";
            case ui5StepType.CLEAR_TEXT:
                return "Clear";
            default:
                return "";
        }
    };
    ui5StepsDef.prototype.getSteps = function (sTestId, sFixtureName) {
        return this._steps[sTestId + sFixtureName];
    };
    ui5StepsDef.prototype.getCurSteps = function (testName) {
        if (!this._steps[testName]) {
            this._steps[testName] = [];
            this._startTime = process.uptime();
        }
        return this._steps[testName];
    };
    ui5StepsDef.prototype.getCurConsoleErrorLogs = function () {
        return this.getConsoleErrorLog(this.getCurrentTestName());
    };
    ui5StepsDef.prototype.addStep = function (t, stepType, status, selector, activity) {
        var sFormat = "";
        if (selector) {
            sFormat = selector instanceof ui5Builder_1.UI5BaseBuilder ? selector.format() : "Selector";
        }
        var bUI5Selector = selector instanceof ui5Builder_1.UI5BaseBuilder ? true : false;
        var bIsTraceSelector = selector instanceof ui5Builder_1.UI5BaseBuilder && selector.isTraced() ? true : false;
        var sCurTestName = this.getCurrentTestName(t);
        var step = new ui5ActionStep(this.getCurSteps(sCurTestName).length, stepType, status, sFormat, process.uptime(), sCurTestName, bUI5Selector, bIsTraceSelector, t, activity);
        if (this.getCurSteps(sCurTestName).filter(function (e) { return e.isUI5Selector === true; }).length === 0 && bUI5Selector === true) {
            step.isFirstUI5Selector = true;
        }
        this.getCurSteps(sCurTestName).push(step);
        var sText = "Step " + step.stepId + ": " + this.getStatusDescr(step.status) + " (action: " + this.getStepDescr(step.stepType);
        if (activity) {
            sText += ", " + activity;
        }
        sText += ") for element " + sFormat;
        console.log(sText);
        return step;
    };
    ui5StepsDef.prototype.setStepStatus = function (step, stat) {
        if (stat === ui5StepStatus.FAILED && this.hasFailedSteps(step.testName)) {
            stat = ui5StepStatus.FAILED_UNPROCESSED;
        }
        var oLastTest = this.getCurSteps(step.testName).find(function (e) { return e.stepId === step.stepId - 1; });
        step.startTime = oLastTest ? oLastTest.endTime : step.startTime;
        step.status = stat;
        step.endTime = process.uptime();
        var sTime = Math.round(((step.endTime - step.startTime) + Number.EPSILON) * 100) / 100;
        var sText = "Step " + step.stepId + ": " + this.getStatusDescr(step.status) + " within " + sTime + "s";
        if (stat == ui5StepStatus.FAILED) {
            sText = colors.red(sText);
        }
        else if (stat == ui5StepStatus.FAILED_UNPROCESSED) {
            sText = colors.yellow(sText);
        }
        else if (stat == ui5StepStatus.PROCESSED) {
            sText = colors.green(sText);
        }
        console.log(sText);
    };
    ui5StepsDef.prototype.hasFailedSteps = function (test) {
        return this.getCurSteps(test).find(function (e) { return e.status === ui5StepStatus.FAILED; }) !== undefined;
    };
    return ui5StepsDef;
}());
var ui5Steps = new ui5StepsDef();
exports.ui5Steps = ui5Steps;
;
;
var ui5TraceMismatchType;
(function (ui5TraceMismatchType) {
    ui5TraceMismatchType["CONTROL_TYPE"] = "metadata.elementName";
    ui5TraceMismatchType["CONTEXT"] = "context";
    ui5TraceMismatchType["ID"] = "identifier.id";
})(ui5TraceMismatchType = exports.ui5TraceMismatchType || (exports.ui5TraceMismatchType = {}));
;
;
var ui5SupportAssistantIssueSeverity;
(function (ui5SupportAssistantIssueSeverity) {
    ui5SupportAssistantIssueSeverity["High"] = "High";
    ui5SupportAssistantIssueSeverity["Medium"] = "Medium";
    ui5SupportAssistantIssueSeverity["Low"] = "Low";
})(ui5SupportAssistantIssueSeverity = exports.ui5SupportAssistantIssueSeverity || (exports.ui5SupportAssistantIssueSeverity = {}));
;
;
;
var ui5ActionProxyDef = /** @class */ (function () {
    function ui5ActionProxyDef() {
    }
    ui5ActionProxyDef.prototype.getRunDef = function () {
        try {
            var oRun = rqTrack.resolveContextTestRun(); //try first..
            if (oRun && oRun.controller) {
                //search it based on our current controller
                for (var i = 0; i < ui5ActionDef.instances.length; i++) {
                    if (ui5ActionDef.instances[i].getTestId() === oRun.test.id) {
                        return ui5ActionDef.instances[i];
                    }
                }
            }
        }
        catch (_a) { }
        ;
        return ui5ActionDef.instances[0];
    };
    ui5ActionProxyDef.prototype.debugSelector = function (elementId) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.getRunDef().debugSelector(elementId)];
            });
        });
    };
    ui5ActionProxyDef.prototype.deactivateAnimation = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.getRunDef().deactivateAnimation()];
            });
        });
    };
    ui5ActionProxyDef.prototype.runSupportAssistant = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.getRunDef().runSupportAssistant()];
            });
        });
    };
    ui5ActionProxyDef.prototype.traceSelector = function (selector, traceOptions) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.getRunDef().traceSelector(selector, traceOptions)];
            });
        });
    };
    ui5ActionProxyDef.prototype.pressKey = function (keys, options) {
        return this.getRunDef().pressKey(keys, options);
    };
    ui5ActionProxyDef.prototype.blur = function () {
        return this.getRunDef().blur();
    };
    ui5ActionProxyDef.prototype.takeElementScreenshot = function (selector, path, options) {
        return this.getRunDef().takeElementScreenshot(selector, path, options);
    };
    ui5ActionProxyDef.prototype.selectText = function (selector, startPos, endPos, options) {
        return this.getRunDef().selectText(selector, startPos, endPos, options);
    };
    ui5ActionProxyDef.prototype.dragToElement = function (selector, destinationSelector, options) {
        return this.getRunDef().dragToElement(selector, destinationSelector, options);
    };
    ui5ActionProxyDef.prototype.drag = function (selector, dragOffsetX, dragOffsetY, options) {
        return this.getRunDef().drag(selector, dragOffsetX, dragOffsetY, options);
    };
    ui5ActionProxyDef.prototype.hover = function (selector, options) {
        return this.getRunDef().hover(selector, options);
    };
    ui5ActionProxyDef.prototype.doubleClick = function (selector, options) {
        return this.getRunDef().doubleClick(selector, options);
    };
    ui5ActionProxyDef.prototype.selectElement = function (selectorParent, key) {
        return this.getRunDef().selectElement(selectorParent, key);
    };
    ui5ActionProxyDef.prototype.typeText = function (selector, text, options) {
        return this.getRunDef().typeText(selector, text, options);
    };
    ui5ActionProxyDef.prototype.clearText = function (selector) {
        return this.getRunDef().clearText(selector);
    };
    ui5ActionProxyDef.prototype.expect = function (selector) {
        return this.getRunDef().expect(selector);
    };
    ui5ActionProxyDef.prototype.expectAny = function (selector) {
        return this.getRunDef().expectAny(selector);
    };
    ui5ActionProxyDef.prototype.expectVisible = function (selector) {
        return this.getRunDef().expectVisible(selector);
    };
    ui5ActionProxyDef.prototype.expectCount = function (selector) {
        return this.getRunDef().expectCount(selector);
    };
    ui5ActionProxyDef.prototype.expectExists = function (selector) {
        return this.getRunDef().expectExists(selector);
    };
    ui5ActionProxyDef.prototype.expectNoSupportAssistantIssue = function (config) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.getRunDef().expectNoSupportAssistantIssue(config)];
            });
        });
    };
    ui5ActionProxyDef.prototype.rightClick = function (selector, options) {
        return this.getRunDef().rightClick(selector, options);
    };
    ui5ActionProxyDef.prototype.click = function (selector, options) {
        return this.getRunDef().click(selector, options);
    };
    return ui5ActionProxyDef;
}());
var ui5ActionDef = /** @class */ (function () {
    function ui5ActionDef(t) {
        this.lclTestRun = t;
        ui5ActionDef.instances.push(this);
    }
    ui5ActionDef.prototype.getTestId = function () {
        return this.t.testRun.test.id;
    };
    Object.defineProperty(ui5ActionDef.prototype, "t", {
        get: function () {
            try {
                var oRun = rqTrack.resolveContextTestRun(); //try first..
                if (oRun && oRun.controller) {
                    return oRun.controller;
                }
            }
            catch (_a) { }
            ;
            return this.lclTestRun;
        },
        enumerable: false,
        configurable: true
    });
    ui5ActionDef.prototype.debugSelector = function (elementId) {
        return __awaiter(this, void 0, void 0, function () {
            var fnWaitLoaded;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        fnWaitLoaded = testcafe_1.ClientFunction(function (elementId) {
                            // @ts-ignore
                            window["__ui5SelectorDebug"] = elementId;
                        });
                        return [4 /*yield*/, fnWaitLoaded(elementId)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ui5ActionDef.prototype._logSelector = function (traceOptions) {
        return __awaiter(this, void 0, void 0, function () {
            var fnGetLog, log, consLength, i, aCols, sNotFound, sProp;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        fnGetLog = testcafe_1.ClientFunction(function (traceOptions) {
                            //@ts-ignore
                            return window.ui5TestCafeSelector.getSelectorLog(traceOptions);
                        }, { boundTestRun: this.t });
                        return [4 /*yield*/, fnGetLog(traceOptions)];
                    case 1:
                        log = _a.sent();
                        if (!traceOptions || typeof traceOptions.showFoundElements === "undefined" || traceOptions.showFoundElements === true) {
                            consLength = {};
                            for (i = 0; i < log.found.length; i++) {
                                consLength[log.found[i].id] = true;
                            }
                            console.log(colors.bold("Found items:") + Object.keys(consLength).length);
                            if (log.found.length > 0) {
                                console.table(log.found, ["id", "target", "property", "expected", "actual"]);
                            }
                        }
                        aCols = ["target", "property", "expected", "actual"];
                        if ((traceOptions === null || traceOptions === void 0 ? void 0 : traceOptions.showCorrectValues) === true) {
                            //loop over all items to find all possible options, which were added..
                            for (sNotFound in log.notFound) {
                                for (sProp in log.notFound[sNotFound]) {
                                    if (aCols.indexOf(sProp) === -1) {
                                        aCols.push(sProp);
                                    }
                                }
                            }
                        }
                        console.log(colors.bold("Not-Found items:") + Object.keys(log.notFound).length);
                        console.table(log.notFound, aCols);
                        return [2 /*return*/];
                }
            });
        });
    };
    ui5ActionDef.prototype.traceSelector = function (selector, traceOptions) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, selector.build(true, (traceOptions === null || traceOptions === void 0 ? void 0 : traceOptions.timeout) ? traceOptions.timeout : 0)];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, this._logSelector(traceOptions)];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ui5ActionDef.prototype.expectExists = function (selector) {
        return new ui5Asserts_1.ui5AssertDef(selector, this.t).exists();
    };
    ui5ActionDef.prototype.expectCount = function (selector) {
        return new ui5Asserts_1.ui5AssertDef(selector.selectAll(), this.t).count();
    };
    ui5ActionDef.prototype.expectVisible = function (selector) {
        return new ui5Asserts_1.ui5AssertDef(selector, this.t).visible();
    };
    ui5ActionDef.prototype.expectAny = function (selector) {
        return new ui5Asserts_1.ui5AssertDef(selector, this.t).value();
    };
    ui5ActionDef.prototype.expect = function (selector) {
        return new ui5Asserts_1.ui5AssertDef(selector, this.t);
    };
    ui5ActionDef.prototype.expectNoSupportAssistantIssue = function (config) {
        return __awaiter(this, void 0, void 0, function () {
            var cnfg, issues, issuesWithSeverity;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        cnfg = config ? config : {};
                        if (typeof cnfg.failOnSeverity === "undefined") {
                            cnfg.failOnSeverity = [ui5SupportAssistantIssueSeverity.High, ui5SupportAssistantIssueSeverity.Medium];
                        }
                        if (typeof cnfg.outputLog === "undefined") {
                            cnfg.outputLog = true;
                        }
                        return [4 /*yield*/, this.runSupportAssistant()];
                    case 1:
                        issues = _a.sent();
                        issuesWithSeverity = issues.filter(function (e) { var _a; return ((_a = cnfg.failOnSeverity) === null || _a === void 0 ? void 0 : _a.indexOf(e.severity)) !== -1; });
                        if (cnfg.outputLog) {
                            console.log("Output of Support Assistant:");
                            console.table(issuesWithSeverity);
                        }
                        return [4 /*yield*/, this.expectAny(issuesWithSeverity.length).equal(0, "We are expecting to have no support assistant issue for the severities " + cnfg.failOnSeverity.join(","))];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ui5ActionDef.prototype._getSelector = function (selector, step) {
        var iNumber = undefined;
        if (selector instanceof ui5Builder_1.UI5BaseBuilderIntf) {
            if (selector.hasOwnTimeout()) {
                iNumber = selector._timeout;
            }
            else if (step.isFirstUI5Selector === true) {
                iNumber = _1.ui5Config.firstSelectorTimeout;
                if (this.t.testRun.opts.selectorTimeout && iNumber < this.t.testRun.opts.selectorTimeout) {
                    iNumber = undefined; //reset to default..
                }
            }
        }
        var oSel = selector instanceof ui5Builder_1.UI5BaseBuilderIntf ? selector.build(true, iNumber) : selector;
        return oSel;
    };
    ui5ActionDef.prototype.clearText = function (selector) {
        var oAction = ui5Steps.addStep(this.t, ui5StepType.CLEAR_TEXT, ui5StepStatus.QUEUED, selector);
        var oProm = this.t.typeText(this._getSelector(selector, oAction), "", { replace: true });
        oProm = this._delegateAPIToPromise(this, oProm);
        oProm.then(function () {
            ui5Steps.setStepStatus(oAction, ui5StepStatus.PROCESSED);
        }, function () {
            ui5Steps.setStepStatus(oAction, ui5StepStatus.FAILED);
        });
        return oProm;
    };
    ui5ActionDef.prototype.runSupportAssistant = function () {
        return __awaiter(this, void 0, void 0, function () {
            var oSupportAssistant, supportAssistantResults;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        oSupportAssistant = testcafe_1.ClientFunction(function () {
                            //@ts-ignore
                            return ui5TestCafeSelector.runSupportAssistant();
                        });
                        return [4 /*yield*/, oSupportAssistant()];
                    case 1:
                        supportAssistantResults = _a.sent();
                        return [2 /*return*/, supportAssistantResults];
                }
            });
        });
    };
    ui5ActionDef.prototype.deactivateAnimation = function () {
        return __awaiter(this, void 0, void 0, function () {
            var oDeactivateFunction;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.click(_1.ui5().domQuery(".sapUiBody"))];
                    case 1:
                        _a.sent(); //only reason: wait for xhr requests to be finished..
                        oDeactivateFunction = testcafe_1.ClientFunction(function () {
                            return new Promise(function (resolve) {
                                //@ts-ignore
                                sap.ui.getCore().getConfiguration().setAnimationMode(sap.ui.core.Configuration.AnimationMode.none);
                            });
                        });
                        return [4 /*yield*/, oDeactivateFunction()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ui5ActionDef.prototype.typeText = function (selector, text, options) {
        var oAction = ui5Steps.addStep(this.t, ui5StepType.TYPE_TEXT, ui5StepStatus.QUEUED, selector, options && options.anonymize ? "******" : text);
        var oProm = this.t.typeText(this._getSelector(selector, oAction), text, options);
        oProm = this._delegateAPIToPromise(this, oProm);
        oProm.then(function () {
            ui5Steps.setStepStatus(oAction, ui5StepStatus.PROCESSED);
        }, function (err) {
            //in theory we should rewrite the callsiteFrameIdx here - let's see if that stuff get's relevant..
            // err.callsite.callsiteFrameIdx = 10;
            ui5Steps.setStepStatus(oAction, ui5StepStatus.FAILED);
        });
        if ((options === null || options === void 0 ? void 0 : options.confirm) === true) {
            return oProm.pressKey("enter");
        }
        return oProm;
    };
    ui5ActionDef.prototype.selectElement = function (selectorParent, key) {
        return this.click(selectorParent.comboBox().arrow()).
            click(_1.ui5().parent(selectorParent).itemdata("key", key));
    };
    ui5ActionDef.prototype.doubleClick = function (selector, options) {
        var oAction = ui5Steps.addStep(this.t, ui5StepType.DOUBLE_CLICK, ui5StepStatus.QUEUED, selector);
        var oProm = this.t.doubleClick(this._getSelector(selector, oAction), options);
        oProm = this._delegateAPIToPromise(this, oProm);
        oProm.then(function () {
            ui5Steps.setStepStatus(oAction, ui5StepStatus.PROCESSED);
        }, function () {
            ui5Steps.setStepStatus(oAction, ui5StepStatus.FAILED);
        });
        return oProm;
    };
    ui5ActionDef.prototype.rightClick = function (selector, options) {
        var oAction = ui5Steps.addStep(this.t, ui5StepType.RIGHT_CLICK, ui5StepStatus.QUEUED, selector);
        var oProm = this.t.rightClick(this._getSelector(selector, oAction), options);
        oProm = this._delegateAPIToPromise(this, oProm);
        oProm.then(function () {
            ui5Steps.setStepStatus(oAction, ui5StepStatus.PROCESSED);
        }, function () {
            ui5Steps.setStepStatus(oAction, ui5StepStatus.FAILED);
        });
        return oProm;
    };
    ui5ActionDef.prototype.hover = function (selector, options) {
        var oAction = ui5Steps.addStep(this.t, ui5StepType.HOVER, ui5StepStatus.QUEUED, selector);
        var oProm = this.t.hover(this._getSelector(selector, oAction), options);
        oProm = this._delegateAPIToPromise(this, oProm);
        oProm.then(function () {
            ui5Steps.setStepStatus(oAction, ui5StepStatus.PROCESSED);
        }, function () {
            ui5Steps.setStepStatus(oAction, ui5StepStatus.FAILED);
        });
        return oProm;
    };
    ui5ActionDef.prototype.drag = function (selector, dragOffsetX, dragOffsetY, options) {
        var oAction = ui5Steps.addStep(this.t, ui5StepType.DRAG, ui5StepStatus.QUEUED, selector);
        var oProm = this.t.drag(this._getSelector(selector, oAction), dragOffsetX, dragOffsetY, options);
        oProm = this._delegateAPIToPromise(this, oProm);
        oProm.then(function () {
            ui5Steps.setStepStatus(oAction, ui5StepStatus.PROCESSED);
        }, function () {
            ui5Steps.setStepStatus(oAction, ui5StepStatus.FAILED);
        });
        return oProm;
    };
    ui5ActionDef.prototype.dragToElement = function (selector, destinationSelector, options) {
        var oAction = ui5Steps.addStep(this.t, ui5StepType.DRAG, ui5StepStatus.QUEUED, selector);
        var oProm = this.t.dragToElement(this._getSelector(selector, oAction), this._getSelector(destinationSelector, oAction), options);
        oProm = this._delegateAPIToPromise(this, oProm);
        oProm.then(function () {
            ui5Steps.setStepStatus(oAction, ui5StepStatus.PROCESSED);
        }, function () {
            ui5Steps.setStepStatus(oAction, ui5StepStatus.FAILED);
        });
        return oProm;
    };
    ui5ActionDef.prototype.selectText = function (selector, startPos, endPos, options) {
        var oAction = ui5Steps.addStep(this.t, ui5StepType.SELECT_TEXT, ui5StepStatus.QUEUED, selector);
        var oProm = this.t.selectText(this._getSelector(selector, oAction), startPos, endPos, options);
        oProm = this._delegateAPIToPromise(this, oProm);
        oProm.then(function () {
            ui5Steps.setStepStatus(oAction, ui5StepStatus.PROCESSED);
        }, function () {
            ui5Steps.setStepStatus(oAction, ui5StepStatus.FAILED);
        });
        return oProm;
    };
    ui5ActionDef.prototype.click = function (selector, options) {
        var oAction = ui5Steps.addStep(this.t, ui5StepType.CLICK, ui5StepStatus.QUEUED, selector);
        var oProm = this.t.click(this._getSelector(selector, oAction), options);
        oProm = this._delegateAPIToPromise(this, oProm);
        oProm.then(function () {
            ui5Steps.setStepStatus(oAction, ui5StepStatus.PROCESSED);
        }, function () {
            ui5Steps.setStepStatus(oAction, ui5StepStatus.FAILED);
        });
        return oProm;
    };
    ui5ActionDef.prototype.takeElementScreenshot = function (selector, path, options) {
        var oAction = ui5Steps.addStep(this.t, ui5StepType.TAKE_ELEMENT_SCREENSHOT, ui5StepStatus.QUEUED, selector);
        var oProm = this.t.takeElementScreenshot(selector instanceof ui5Builder_1.UI5BaseBuilderIntf ? selector.build(true) : selector, path, options);
        oProm = this._delegateAPIToPromise(this, oProm);
        oProm.then(function () {
            ui5Steps.setStepStatus(oAction, ui5StepStatus.PROCESSED);
        }, function () {
            ui5Steps.setStepStatus(oAction, ui5StepStatus.FAILED);
        });
        return oProm;
    };
    ui5ActionDef.prototype.blur = function () {
        var oAction = ui5Steps.addStep(this.t, ui5StepType.BLUR, ui5StepStatus.QUEUED);
        var oProm = this.t.click(testcafe_1.Selector(".sapUiBody"));
        oProm = this._delegateAPIToPromise(this, oProm);
        oProm.then(function () {
            ui5Steps.setStepStatus(oAction, ui5StepStatus.PROCESSED);
        }, function () {
            ui5Steps.setStepStatus(oAction, ui5StepStatus.FAILED);
        });
        return oProm;
    };
    ui5ActionDef.prototype.pressKey = function (keys, options) {
        var oAction = ui5Steps.addStep(this.t, ui5StepType.PRESS_KEY, ui5StepStatus.QUEUED, undefined, keys);
        var oProm = this.t.pressKey(keys, options);
        oProm = this._delegateAPIToPromise(this, oProm);
        oProm.then(function () {
            ui5Steps.setStepStatus(oAction, ui5StepStatus.PROCESSED);
        }, function () {
            ui5Steps.setStepStatus(oAction, ui5StepStatus.FAILED);
        });
        return oProm;
    };
    ui5ActionDef.prototype._delegateAPIToPromise = function (_handler, dest) {
        ["click", "typeText", "clearText", "deactivateAnimation", "selectElement", "traceSelector", "doubleClick", "rightClick", "hover", "drag", "dragToElement", "selectText", "takeElementScreenshot", "pressKey", "blur", "selectElement"].forEach(function (srcProp) {
            var fn = function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                return _handler[srcProp].apply(_handler, args);
            };
            dest[srcProp] = fn;
        });
        return dest;
    };
    ui5ActionDef.instances = [];
    return ui5ActionDef;
}());
exports.ui5ActionDef = ui5ActionDef;
var ui5Action = new ui5ActionProxyDef();
exports.ui5Action = ui5Action;
//# sourceMappingURL=ui5Action.js.map