"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ui5Proxy = void 0;
var testcafe_1 = require("testcafe");
var proxy = require('express-http-proxy');
var expressApp = require('express');
var fs = require('fs');
var im = require('istanbul-lib-instrument');
var Url = require('url-parse');
var ui5ProxyDef = /** @class */ (function () {
    function ui5ProxyDef() {
        this._coverageUrl = "";
        this._adjustedUrl = "";
        this._coverageUrl = "";
        this._basePath = "";
        this._bCoverageStarted = false;
        this._reportedLists = {};
        this._fileCache = {};
        this._instrumenter = im.createInstrumenter();
    }
    ui5ProxyDef.prototype._matcher = function (url) {
        if (url.match(/\.js$/) && !url.match(/jquery/)) {
            return url;
        }
        return null;
    };
    ui5ProxyDef.prototype.stopCoverageProxy = function () {
        if (!this._bCoverageStarted) {
            return;
        }
        this._app.close();
        this._bCoverageStarted = false;
        this._coverageUrl = "";
        this._adjustedUrl = "";
    };
    ui5ProxyDef.prototype.checkLoggedComponents = function (t) {
        var _a, _b, _c;
        return __awaiter(this, void 0, void 0, function () {
            var clientComp, i;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        if (!((_a = this._config) === null || _a === void 0 ? void 0 : _a.log)) {
                            return [2 /*return*/];
                        }
                        return [4 /*yield*/, testcafe_1.ClientFunction(function () {
                                //@ts-ignore
                                if (!sap.ui.core.Component || !sap.ui.core.Component.registry) {
                                    return [];
                                }
                                //@ts-ignore
                                var aComp = sap.ui.core.Component.registry.all();
                                var aCompList = [];
                                for (var sComp in aComp) {
                                    var sCompName = aComp[sComp].getMetadata().getComponentName();
                                    if (sCompName.startsWith("sap.")) {
                                        continue;
                                    }
                                    aCompList.push(sCompName.replace(/\./g, '/'));
                                }
                                return aCompList;
                            }, { boundTestRun: t })()];
                    case 1:
                        clientComp = _d.sent();
                        for (i = 0; i < clientComp.length; i++) {
                            if (((_c = (_b = this._config) === null || _b === void 0 ? void 0 : _b.debugComponents) === null || _c === void 0 ? void 0 : _c.indexOf(clientComp[i])) !== -1) {
                                continue;
                            }
                            if (this._reportedLists[clientComp[i]]) {
                                continue;
                            }
                            this._reportedLists[clientComp[i]] = 1;
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    ui5ProxyDef.prototype.logMissingComponents = function () {
        var _a;
        if (!((_a = this._config) === null || _a === void 0 ? void 0 : _a.log)) {
            return;
        }
        for (var sComp in this._reportedLists) {
            if (this._reportedLists[sComp] === 2) {
                continue;
            }
            this._reportedLists[sComp] = 2;
            console.log("Component " + sComp + " might not have been instrumented, as not part of debug sources");
        }
    };
    ui5ProxyDef.prototype.startCoverageProxy = function (url, config) {
        var _this = this;
        var urlParse = new Url(url);
        var urlHost = urlParse.protocol + "//" + urlParse.host;
        this._config = config;
        if (this._coverageUrl !== "" && this._coverageUrl !== urlHost) {
            return this._adjustedUrl;
        }
        else if (this._coverageUrl === urlHost) {
            this._basePath = config.basePath ? config.basePath : "";
            return this._adjustedUrl;
        }
        this._coverageUrl = urlHost;
        this._basePath = config.basePath ? config.basePath : "";
        this._app = expressApp();
        var adjustedUrl = "http://localhost:3000" + urlParse.pathname;
        if (!urlParse.query && config.debugComponents) {
            adjustedUrl += "?";
        }
        if (urlParse.query) {
            adjustedUrl += urlParse.query;
        }
        if (config.debugComponents && config.debugComponents.length > 0) {
            if (urlParse.query) {
                adjustedUrl += "&";
            }
            adjustedUrl += "sap-ui-debug=";
            for (var i = 0; i < config.debugComponents.length; i++) {
                adjustedUrl += config.debugComponents[i];
                if (i !== config.debugComponents.length - 1) {
                    adjustedUrl += ",";
                }
            }
        }
        adjustedUrl += urlParse.hash;
        var that = this;
        if (this._bCoverageStarted === false) {
            // run the proxy middleware based on the baseUri configuration
            this._app.use('/', proxy(this._coverageUrl, {
                https: urlParse.protocol === "https:",
                limit: false,
                preserveHostHdr: false,
                proxyReqOptDecorator: function (proxyReqOpts) {
                    proxyReqOpts.rejectUnauthorized = false;
                    return proxyReqOpts;
                },
                proxyReqPathResolver: function (req) {
                    return req.url;
                },
                userResDecorator: function (proxyRes, proxyResData, userReq, userRes) {
                    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
                    if (proxyRes.statusCode > 300) {
                        return proxyResData;
                    }
                    if (!that._matcher(proxyRes.req.path)) {
                        return proxyResData;
                    }
                    if (proxyRes.req.path.indexOf("/sap/bc/ui5_ui5/ui2/ushell/resources") !== -1) {
                        return proxyResData; //generally do not instrument sap standard code..
                    }
                    if (proxyRes.req.path.indexOf("/sap/public/bc/ui2") !== -1) {
                        return proxyResData; //logon data..
                    }
                    if (proxyRes.req.path.indexOf("library-preload.js") !== -1) {
                        if (((_a = that._config) === null || _a === void 0 ? void 0 : _a.log) === true) {
                            console.log("skipped " + proxyRes.req.path + " as it is a library-preload file - add to debug sources if this file should be instrumented");
                        }
                        return proxyResData;
                    }
                    if (proxyRes.req.path.indexOf("Component-preload") !== -1) {
                        if (((_b = that === null || that === void 0 ? void 0 : that._config) === null || _b === void 0 ? void 0 : _b.log) === true) {
                            console.log("skipped " + proxyRes.req.path + " as it is a component-preload file - add to debug sources if this file should be instrumented");
                        }
                        return proxyResData;
                    }
                    if (proxyRes.req.path.indexOf(that._basePath) === -1) {
                        if (((_c = that === null || that === void 0 ? void 0 : that._config) === null || _c === void 0 ? void 0 : _c.log) === true) {
                            console.log("skipped " + proxyRes.req.path + " as it is not part of base Path " + that._basePath);
                        }
                        return proxyResData;
                    }
                    if (proxyRes.req.path.indexOf(that._basePath) === -1) {
                        if (((_d = that === null || that === void 0 ? void 0 : that._config) === null || _d === void 0 ? void 0 : _d.log) === true) {
                            console.log("skipped " + proxyRes.req.path + " as it is not part of base Path " + that._basePath);
                        }
                        return proxyResData;
                    }
                    //do we have any whitelist?
                    if ((_e = that === null || that === void 0 ? void 0 : that._config) === null || _e === void 0 ? void 0 : _e.includePaths) {
                        var bFound = false;
                        for (var j = 0; j < that._config.includePaths.length; j++) {
                            if (proxyRes.req.path.indexOf(that._config.includePaths[j]) !== -1) {
                                bFound = true;
                                break;
                            }
                        }
                        if (bFound === false) {
                            if (((_f = that === null || that === void 0 ? void 0 : that._config) === null || _f === void 0 ? void 0 : _f.log) === true) {
                                console.log("skipped " + proxyRes.req.path + " as it is not part of include paths");
                            }
                            return proxyResData;
                        }
                    }
                    if ((_g = that === null || that === void 0 ? void 0 : that._config) === null || _g === void 0 ? void 0 : _g.excludePaths) {
                        var bFound = false;
                        for (var j = 0; j < that._config.excludePaths.length; j++) {
                            if (proxyRes.req.path.indexOf(that._config.excludePaths[j]) !== -1) {
                                bFound = true;
                                break;
                            }
                        }
                        if (bFound === true) {
                            if (((_h = that === null || that === void 0 ? void 0 : that._config) === null || _h === void 0 ? void 0 : _h.log) === true) {
                                console.log("skipped " + proxyRes.req.path + " as it is part of exclude paths");
                            }
                            return proxyResData;
                        }
                    }
                    if (that === null || that === void 0 ? void 0 : that._fileCache[proxyRes.req.path]) {
                        return that === null || that === void 0 ? void 0 : that._fileCache[proxyRes.req.path];
                    }
                    if (((_j = that === null || that === void 0 ? void 0 : that._config) === null || _j === void 0 ? void 0 : _j.log) === true) {
                        console.log("instrument: " + proxyRes.req.path);
                    }
                    var pathname = proxyRes.req.path;
                    //pathname every now and than contains a "~" (cache variant) - remove paths containing this cache..
                    if (pathname.indexOf("~") !== -1) {
                        pathname = pathname.split("/").filter(function (e) { return e.indexOf("~") === -1; }).join("/");
                    }
                    var fileName = process.env.APPDATA + "/ui5-testcafe-selector-utils/tmp/" + pathname;
                    var fileNameArr = fileName.split('/');
                    fileNameArr.pop();
                    var dirName = fileNameArr.join('/');
                    fs.mkdirSync(dirName, {
                        recursive: true,
                    });
                    var data = proxyResData.toString('utf8');
                    fs.writeFileSync(fileName, data);
                    try {
                        data = that._instrumenter.instrumentSync(data, fileName);
                    }
                    catch (err) {
                        if (((_k = that === null || that === void 0 ? void 0 : that._config) === null || _k === void 0 ? void 0 : _k.log) === true) {
                            console.log("instrument failed for " + proxyRes.req.path);
                        }
                        return proxyResData;
                    }
                    that._fileCache[proxyRes.req.path] = data;
                    return data;
                },
                userResHeaderDecorator: function (headers, userReq, userRes, proxyReq, proxyRes) {
                    if (urlParse.protocol === "https:") {
                        Object.keys(headers).forEach(function (headerName) {
                            if (/set-cookie/i.test(headerName)) {
                                // remove the secure flag of the cookies
                                if (Array.isArray(headers[headerName])) {
                                    headers[headerName] = headers[headerName]
                                        // remove flag 'Secure'
                                        .map(function (cookieValue) {
                                        return cookieValue.replace(/;\s*secure\s*(?:;|$)/gi, ";");
                                    })
                                        // remove attribute 'SameSite'
                                        .map(function (cookieValue) {
                                        return cookieValue.replace(/;\s*samesite=[^;]+\s*(?:;|$)/gi, ";");
                                    });
                                }
                            }
                        });
                    }
                    return headers;
                }
            }));
            this._oServerPromise = new Promise(function (resolve) {
                _this._oServer = _this._app.listen(3000, function () {
                    that._bCoverageStarted = true;
                    resolve(true);
                });
            });
            var oServer_1 = this._oServer;
            var exitHandler = function () {
                if (!that._bCoverageStarted) {
                    return;
                }
                that._bCoverageStarted = false;
                oServer_1.close();
            };
            //do something when app is closing
            process.on('exit', exitHandler);
            process.on('SIGINT', exitHandler);
            process.on('SIGUSR1', exitHandler);
            process.on('SIGUSR2', exitHandler);
            process.on('uncaughtException', exitHandler);
        }
        this._adjustedUrl = adjustedUrl;
        return adjustedUrl;
    };
    ui5ProxyDef.prototype.getStartPromise = function () {
        return this._oServerPromise;
    };
    return ui5ProxyDef;
}());
exports.ui5Proxy = new ui5ProxyDef();
//# sourceMappingURL=ui5Proxy.js.map